/**
 * @param {ParseOptions | null | undefined} [options]
<<<<<<< HEAD
 *   Configuration (optional).
 * @returns {ParseContext}
 *   Parser.
 */
export function parse(options?: ParseOptions | null | undefined): ParseContext;
import type { ParseOptions } from 'micromark-util-types';
import type { ParseContext } from 'micromark-util-types';
//# sourceMappingURL=parse.d.ts.map
=======
 * @returns {ParseContext}
 */
export function parse(options?: ParseOptions | null | undefined): ParseContext
export type Create = import('micromark-util-types').Create
export type FullNormalizedExtension =
  import('micromark-util-types').FullNormalizedExtension
export type InitialConstruct = import('micromark-util-types').InitialConstruct
export type ParseContext = import('micromark-util-types').ParseContext
export type ParseOptions = import('micromark-util-types').ParseOptions
>>>>>>> 2a34df12b795abd1706ff2b3738872cb2458f6fb
