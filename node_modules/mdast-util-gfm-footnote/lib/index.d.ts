/**
 * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes
 * in markdown.
 *
 * @returns {FromMarkdownExtension}
 *   Extension for `mdast-util-from-markdown`.
 */
<<<<<<< HEAD
export function gfmFootnoteFromMarkdown(): FromMarkdownExtension;
=======
export function gfmFootnoteFromMarkdown(): FromMarkdownExtension
>>>>>>> 2a34df12b795abd1706ff2b3738872cb2458f6fb
/**
 * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes
 * in markdown.
 *
<<<<<<< HEAD
 * @param {ToMarkdownOptions | null | undefined} [options]
 *   Configuration (optional).
 * @returns {ToMarkdownExtension}
 *   Extension for `mdast-util-to-markdown`.
 */
export function gfmFootnoteToMarkdown(options?: ToMarkdownOptions | null | undefined): ToMarkdownExtension;
import type { Extension as FromMarkdownExtension } from 'mdast-util-from-markdown';
import type { ToMarkdownOptions } from 'mdast-util-gfm-footnote';
import type { Options as ToMarkdownExtension } from 'mdast-util-to-markdown';
//# sourceMappingURL=index.d.ts.map
=======
 * @returns {ToMarkdownExtension}
 *   Extension for `mdast-util-to-markdown`.
 */
export function gfmFootnoteToMarkdown(): ToMarkdownExtension
export type FootnoteDefinition = import('mdast').FootnoteDefinition
export type FootnoteReference = import('mdast').FootnoteReference
export type CompileContext = import('mdast-util-from-markdown').CompileContext
export type FromMarkdownExtension = import('mdast-util-from-markdown').Extension
export type FromMarkdownHandle = import('mdast-util-from-markdown').Handle
export type ToMarkdownHandle = import('mdast-util-to-markdown').Handle
export type Map = import('mdast-util-to-markdown').Map
export type ToMarkdownExtension = import('mdast-util-to-markdown').Options
>>>>>>> 2a34df12b795abd1706ff2b3738872cb2458f6fb
